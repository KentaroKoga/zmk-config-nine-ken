/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};
&sk {
    release-after-ms = <2000>;
    quick-release;
};
 
/* Layers */
#define AL1 0
#define AL2 1
#define SM1 2
#define SM2 3
#define NUM 4
#define SYS 5
#define FUN 6
/ { 
    combos {
      compatible = "zmk,combos";
      combo_BSPC {
				timeout-ms = <50>;
				key-positions = <1 2>;
				bindings = <&kp BSPC>;
			};
			combo_ENTER {
				timeout-ms = <50>;
				key-positions = <8 9>;
				bindings = <&kp ENTER>;
			};
			combo_COPY {
				timeout-ms = <50>;
				key-positions = <7 8>;
				bindings = <&kp LG(C)>;
			};
			combo_PASTE {
				timeout-ms = <50>;
				key-positions = <0 1>;
				bindings = <&kp LG(V)>;
			};
			combo_SAVE {
				timeout-ms = <50>;
				key-positions = <6 7>;
				bindings = <&kp LG(S)>;
			};
			combo_UNDO {
				timeout-ms = <50>;
				key-positions = <7 8 9>;
				bindings = <&kp LG(Z)>;
			};
			combo_REDO {
				timeout-ms = <50>;
				key-positions = <0 1 2>;
				bindings = <&kp LG(LS(Z))>;
			};
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
        };
    		td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
  };
//                  0       1       2                   3       4           5
//          6       7       8       9                   10      11          12          13
//                          14      15                  16      17
       keymap {
                compatible = "zmk,keymap";
                
                alpha1 {
                label = "Base";
        bindings = <
                      &kp P						&kp L							&kp I                		&kp G								&kp C						&kp S
            &kp A 		&hm_l LALT O		&hm_l LCTRL E     &hm_l LSHIFT U          &hm_r RSHIFT D    	&hm_r RGUI H		&hm_r RALT T     &hm_r RCTRL N
                                    	&mt LGUI SPACE		&to 1                 	&mt RSHIFT ENTER  	&mt RALT BSPC
        >;
        };
                alpha2 {
                label = "Al2";
        bindings = <
                    &mt LGUI SPACE      &kp TAB     &kp Y               &kp R       				&kp F         &kp Z
        &kp Q       &kp J       				&kp K       &kp X               &kp B       				&kp M         &kp W       &kp V
                                				&to 0      	&to 2               &mt RSHIFT ENTER  	&mt RALT BSPC
        >;
        };

                sym1 {
                label = "Code";
        bindings = <
                    &kp EXCL    &kp HASH  	&kp AMPS                      &kp LBKT   					&kp LPAR     &kp LBRC
        &kp BSLH   &kp GRAVE    &kp TILDE   &kp CARET                     &kp RBKT       			&kp RPAR     &kp RBRC    &kp AT
                                &to 0      	&to 3                      		&mt RSHIFT ENTER		&mt RALT BSPC
        >;
        };

        				sym2 {
        label = "Punct";
        bindings = <
                    &trans    	&kp BSLH        &kp UNDER               &kp MINUS    				&kp PLUS    &trans
        &trans    	&kp CARET   &kp GRAVE       &kp PIPE             		&kp PRCNT    				&kp STAR    &kp EQUAL    &trans
                                &to 0      			&to 4                   &mt RSHIFT ENTER  	&mt RALT BSPC
        >;
        };

        				num {
        label = "Num";
        bindings = <
                    &kp N7      	&kp N8   				&kp N9       				&kp N0   						&kp DOT    		&mt STAR SLASH
        &kp PRCNT   &kp N1       	&kp N2          &kp N3              &kp N4          		&kp N5       	&kp N6       &mt PLUS MINUS
                                  &to 0      			&to 5               &mt RSHIFT ENTER  	&mt RALT BSPC
        >;
        };

        				sys {
        label = "Nav";
        bindings = <
                	&kp PG_UP       &kp UP    		&kp PG_DN         &kp C_VOL_UP     		&kp C_BRI_UP    	&kp LG(LS(N4))
        &trans   	&kp LEFT        &tdkp DOWN   	&kp RIGHT         &kp C_VOL_DN     		&kp C_BRI_DN  		&kp LG(LS(N3))   &trans
                                  &to 0      		&to 6           	&mt RSHIFT ENTER  	&mt RALT BSPC
        >;
        };

        				fun {
        label = "Fn";
            bindings = <
                	&kp F9   	&kp F10   &kp F11          &kp F12   					&trans   				&trans
     		&kp F1    &kp F2   	&kp F3    &kp F4           &kp F5   					&kp F6   				&kp F7  &kp F8
                          	&to 0     &trans           &mt RSHIFT ENTER  	&mt RALT BSPC
                >;
        };
    };
};
